<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Nitro Frog OG - Frogger</title>
  <style>
    body {
      margin: 0;
      background: #0f1b2b;
      overflow: hidden;
      font-family: 'Comic Sans MS', cursive, sans-serif;
    }
    canvas {
  width: 100%;
  height: auto;
  max-width: 480px;
  display: block;
  margin: 0 auto;
  background: repeating-linear-gradient(45deg, #222, #222 10px, #111 10px, #111 20px);
  border: 4px solid #00ffcc;
  animation: shake 0.3s infinite alternate ease-in-out;
}
    #startScreen, #gameOverScreen {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 31, 47, 0.95);
      color: white;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      z-index: 1000;
      text-align: center;
    }
    #startScreen img, #gameOverScreen img {
      width: 200px;
      animation: bounce 2s infinite;
    }
    #startScreen h1, #gameOverScreen h1 {
      font-size: 32px;
      margin: 20px 0 10px;
      color: #00ffcc;
    }
    #startScreen p {
      max-width: 300px;
      font-size: 16px;
      color: #aaa;
    }
    button {
      font-size: 22px;
      padding: 14px 28px;
      background-color: #00ffcc;
      border: none;
      border-radius: 10px;
      cursor: pointer;
      margin-top: 20px;
      animation: pulse 2s infinite;
    }
    #creator {
      margin-top: 20px;
      font-size: 14px;
      color: #999;
    }
    #levelSelect {
      margin-top: 15px;
    }
    #levelSelect select {
      font-size: 18px;
      padding: 6px;
    }
    #highScoreDisplay {
      margin-top: 10px;
      font-size: 16px;
      color: #00ffcc;
    }
    #leaderboard {
      font-size: 14px;
      margin-top: 20px;
      color: #fff;
    }
    @keyframes bounce {
      0%, 100% { transform: translateY(0); }
      50% { transform: translateY(-15px); }
    }
    @keyframes pulse {
      0% { transform: scale(1); }
      50% { transform: scale(1.1); }
      100% { transform: scale(1); }
    }
  @keyframes shake {
  0% { transform: rotate(-0.3deg); }
  100% { transform: rotate(0.3deg); }
}

@keyframes flash {
  0%, 100% { background-color: #222; }
  50% { background-color: #ff00ff; }
}

@keyframes glow {
  0% { box-shadow: 0 0 5px #0ff; }
  50% { box-shadow: 0 0 20px #f0f; }
  100% { box-shadow: 0 0 5px #0ff; }
}
</style>
</head>
<body>

<div id="startScreen">
  <img src="logo.png" alt="Nitro Frog Logo">
  <h1>Welcome to Nitro Frog OG!</h1>
  <p><strong>How to Play:</strong><br>
  Use the arrow keys to guide the frog across traffic. Avoid the cars and try to reach the top! Each successful jump increases your score.</p>
  <div id="levelSelect">
    <label for="difficulty">Choose Difficulty:</label>
    <select id="difficulty">
      <option value="easy">Easy</option>
      <option value="medium">Medium</option>
      <option value="hard">Hard</option>
    </select>
  </div>
  <button onclick="startGame()">Start Game</button>
  <div id="creator">Created by FEARLESS</div>
</div>

<div id="gameOverScreen" style="display:none;">
  <img src="logo.png" alt="Nitro Frog Logo">
  <h1>Game Over!</h1>
  <p>Your frog got squashed! üê∏üí•</p>
  <div id="highScoreDisplay">Highest Score: <span id="highScore">0</span></div>
  <div id="leaderboard"></div>
  <button onclick="restartGame()">Restart</button>
</div>

<canvas id="gameCanvas" width="480" height="640" style="animation: glow 2s infinite alternate;"></canvas>
<audio id="restartSound" src="crash.mp3"></audio>

<script>
let level = 1;
function showLevelUp() {
  const msg = document.getElementById('levelUpMessage');
  msg.style.display = 'block';
  setTimeout(() => { msg.style.display = 'none'; }, 1500);
}
const canvas = document.getElementById('gameCanvas');
const ctx = canvas.getContext('2d');
const frog = { x: 220, y: 600, width: 40, height: 40, speed: 40 };
let cars = [];
const lanes = [480, 400, 320, 240];
let score = 0;
let highScore = localStorage.getItem('frogHighScore') || 0;
let gameOver = false;
let gameStarted = false;
let difficulty = 'easy';

function drawFrog() {
  ctx.fillStyle = '#00ff00';
  ctx.fillRect(frog.x, frog.y, frog.width, frog.height);
}

function drawCars() {
  ctx.fillStyle = '#ff3300';
  for (let car of cars) {
    ctx.fillRect(car.x, car.y, car.width, car.height);
  }
}

function moveCars() {
  for (let car of cars) {
    car.x += car.speed;
    if (car.x > canvas.width) car.x = -car.width;
  }
}

function spawnCars() {
  lanes.forEach((y, i) => {
    let spawnRate = difficulty === 'hard' ? 0.06 : difficulty === 'medium' ? 0.03 : 0.02;
    if (Math.random() < spawnRate) {
      let speed = difficulty === 'hard' ? 5 : difficulty === 'medium' ? 3 : 2;
      cars.push({ x: -60, y, width: 60, height: 40, speed: speed + i });
    }
  });
}

function detectCollision() {
  for (let car of cars) {
    if (
      frog.x < car.x + car.width &&
      frog.x + frog.width > car.x &&
      frog.y < car.y + car.height &&
      frog.y + frog.height > car.y
    ) {
      gameOver = true;
    }
  }
}

function drawScore() {
  ctx.fillStyle = '#fff';
  ctx.font = '20px Arial';
  ctx.fillText('Score: ' + score, 10, 30);
}

function gameLoop() {
  if (gameOver) {
    if (score > highScore) {
      highScore = score;
      localStorage.setItem('frogHighScore', highScore);
    }
    document.getElementById('highScore').textContent = highScore;
    document.getElementById('gameOverScreen').style.display = 'flex';
    showLeaderboard();
    return;
  }
  ctx.clearRect(0, 0, canvas.width, canvas.height);
  drawFrog();
  drawCars();
  drawScore();
  moveCars();
  detectCollision();
  spawnCars();
  requestAnimationFrame(gameLoop);
}

function handleInput(direction) {
  if (!gameStarted || gameOver) return;
  if (direction === 'up' && frog.y > 0) {
    frog.y -= frog.speed;
    score++;
    if (frog.y <= 0) {
      frog.y = 600; // Reset to bottom
      level++;
      frog.speed += 1;
      for (let car of cars) car.speed += 0.5;
      showLevelUp();
    }
  } else if (direction === 'down' && frog.y < canvas.height - frog.height) {
    frog.y += frog.speed;
  } else if (direction === 'left' && frog.x > 0) {
    frog.x -= frog.speed;
  } else if (direction === 'right' && frog.x < canvas.width - frog.width) {
    frog.x += frog.speed;
  }
}

document.addEventListener('keydown', e => {
  if (e.key === 'ArrowUp') handleInput('up');
  else if (e.key === 'ArrowDown') handleInput('down');
  else if (e.key === 'ArrowLeft') handleInput('left');
  else if (e.key === 'ArrowRight') handleInput('right');
});

let touchStartX = 0;
let touchStartY = 0;

canvas.addEventListener('touchstart', e => {
  const touch = e.touches[0];
  touchStartX = touch.clientX;
  touchStartY = touch.clientY;
}, { passive: true });

canvas.addEventListener('touchend', e => {
  const touch = e.changedTouches[0];
  const dx = touch.clientX - touchStartX;
  const dy = touch.clientY - touchStartY;
  const absDx = Math.abs(dx);
  const absDy = Math.abs(dy);

  if (Math.max(absDx, absDy) > 20) {
    if (absDx > absDy) {
      if (dx > 0) handleInput('right');
      else handleInput('left');
    } else {
      if (dy > 0) handleInput('down');
      else handleInput('up');
    }
  }
}, { passive: true });

function startGame() {
  document.getElementById('startScreen').style.display = 'none';
  difficulty = document.getElementById('difficulty').value;
  gameStarted = true;
  gameLoop();
}

function restartGame() {
  const sound = document.getElementById('restartSound');
  sound.play();
  document.getElementById('gameOverScreen').style.display = 'none';
  frog.x = 220;
  frog.y = 600;
  cars = [];
  score = 0;
  gameOver = false;
  setTimeout(gameLoop, 300);
}

function showLeaderboard() {
  const leaderboard = [
    { name: 'Player1', score: 15 },
    { name: 'Player2', score: 12 },
    { name: 'YOU', score: highScore },
    { name: 'Player4', score: 8 },
    { name: 'Player5', score: 5 },
  ];
  leaderboard.sort((a, b) => b.score - a.score);
  const list = leaderboard.map(player => `<div>${player.name}: ${player.score}</div>`).join('');
  document.getElementById('leaderboard').innerHTML = `<h3>Leaderboard</h3>${list}`;
}
</script>

<div id="levelUpMessage" style="position:absolute;top:20px;left:50%;transform:translateX(-50%);color:#00ffcc;font-size:24px;font-weight:bold;z-index:2000;display:none;">Level Up!</div>

</body>
</html>
